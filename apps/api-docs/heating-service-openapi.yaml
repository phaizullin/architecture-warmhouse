openapi: 3.0.3
info:
  title: Heating Service API
  description: API для управления отоплением в системе "Умный дом"
  version: 1.0.0
  contact:
    name: Smart Home Team
    email: support@smarthouse.ru

servers:
  - url: https://api.smarthouse.ru/heating
    description: Production API server
  - url: https://staging-api.smarthouse.ru/heating
    description: Staging API server

tags:
  - name: heating
    description: Операции с системой отопления
  - name: schedules
    description: Операции с расписаниями отопления
  - name: devices
    description: Операции с устройствами отопления

paths:
  /devices:
    get:
      summary: Получение списка устройств отопления
      tags:
        - devices
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [online, offline, all]
          description: Фильтр по статусу устройств
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HeatingDevice'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      summary: Добавление нового устройства отопления
      tags:
        - devices
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewHeatingDevice'
      responses:
        '201':
          description: Устройство успешно добавлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeatingDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /devices/{deviceId}:
    get:
      summary: Получение информации об устройстве отопления
      tags:
        - devices
      security:
        - BearerAuth: []
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
          description: ID устройства отопления
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeatingDevice'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Обновление информации об устройстве отопления
      tags:
        - devices
      security:
        - BearerAuth: []
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
          description: ID устройства отопления
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHeatingDevice'
      responses:
        '200':
          description: Устройство успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeatingDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Удаление устройства отопления
      tags:
        - devices
      security:
        - BearerAuth: []
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
          description: ID устройства отопления
      responses:
        '204':
          description: Устройство успешно удалено
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /devices/{deviceId}/status:
    get:
      summary: Получение текущего статуса устройства отопления
      tags:
        - devices
      security:
        - BearerAuth: []
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
          description: ID устройства отопления
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatus'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /devices/{deviceId}/control:
    post:
      summary: Управление устройством отопления
      tags:
        - heating
      security:
        - BearerAuth: []
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
          description: ID устройства отопления
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeatingControl'
      responses:
        '200':
          description: Команда успешно отправлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /schedules:
    get:
      summary: Получение списка расписаний отопления
      tags:
        - schedules
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HeatingSchedule'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      summary: Создание нового расписания отопления
      tags:
        - schedules
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewHeatingSchedule'
      responses:
        '201':
          description: Расписание успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeatingSchedule'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /schedules/{scheduleId}:
    get:
      summary: Получение информации о расписании отопления
      tags:
        - schedules
      security:
        - BearerAuth: []
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
          description: ID расписания отопления
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeatingSchedule'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Обновление расписания отопления
      tags:
        - schedules
      security:
        - BearerAuth: []
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
          description: ID расписания отопления
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHeatingSchedule'
      responses:
        '200':
          description: Расписание успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeatingSchedule'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Удаление расписания отопления
      tags:
        - schedules
      security:
        - BearerAuth: []
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema:
            type: string
          description: ID расписания отопления
      responses:
        '204':
          description: Расписание успешно удалено
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    BadRequest:
      description: Неверный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Необходима аутентификация
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Доступ запрещен
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    HeatingDevice:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор устройства
        name:
          type: string
          description: Название устройства
        location:
          type: string
          description: Местоположение устройства
        type:
          type: string
          enum: [radiator, floor_heating, boiler]
          description: Тип устройства отопления
        status:
          type: string
          enum: [online, offline]
          description: Статус подключения устройства
        state:
          type: string
          enum: [on, off, automatic]
          description: Текущее состояние устройства
        currentTemperature:
          type: number
          format: float
          description: Текущая температура (если доступно)
        targetTemperature:
          type: number
          format: float
          description: Целевая температура
        scheduleId:
          type: string
          nullable: true
          description: ID привязанного расписания (если есть)
        lastUpdated:
          type: string
          format: date-time
          description: Время последнего обновления данных
      required:
        - id
        - name
        - type
        - status
        - state

    NewHeatingDevice:
      type: object
      properties:
        name:
          type: string
          description: Название устройства
        location:
          type: string
          description: Местоположение устройства
        type:
          type: string
          enum: [radiator, floor_heating, boiler]
          description: Тип устройства отопления
        targetTemperature:
          type: number
          format: float
          description: Целевая температура
      required:
        - name
        - type

    UpdateHeatingDevice:
      type: object
      properties:
        name:
          type: string
          description: Название устройства
        location:
          type: string
          description: Местоположение устройства
        targetTemperature:
          type: number
          format: float
          description: Целевая температура
        scheduleId:
          type: string
          nullable: true
          description: ID привязанного расписания (null для отвязки)

    DeviceStatus:
      type: object
      properties:
        deviceId:
          type: string
          description: ID устройства
        status:
          type: string
          enum: [online, offline]
          description: Статус подключения устройства
        state:
          type: string
          enum: [on, off, automatic]
          description: Текущее состояние устройства
        currentTemperature:
          type: number
          format: float
          description: Текущая температура (если доступно)
        targetTemperature:
          type: number
          format: float
          description: Целевая температура
        lastUpdated:
          type: string
          format: date-time
          description: Время последнего обновления данных
      required:
        - deviceId
        - status
        - state

    HeatingControl:
      type: object
      properties:
        action:
          type: string
          enum: [on, off, automatic, set_temperature]
          description: Действие для выполнения
        temperature:
          type: number
          format: float
          description: Целевая температура (только для action=set_temperature)
      required:
        - action

    CommandResult:
      type: object
      properties:
        success:
          type: boolean
          description: Результат выполнения команды
        commandId:
          type: string
          description: ID команды для отслеживания статуса
        message:
          type: string
          description: Дополнительная информация
      required:
        - success
        - commandId

    HeatingSchedule:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор расписания
        name:
          type: string
          description: Название расписания
        deviceIds:
          type: array
          items:
            type: string
          description: Список ID устройств, связанных с расписанием
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleEntry'
          description: Записи расписания
        isActive:
          type: boolean
          description: Активно ли расписание
        createdAt:
          type: string
          format: date-time
          description: Дата создания расписания
        updatedAt:
          type: string
          format: date-time
          description: Дата последнего обновления расписания
      required:
        - id
        - name
        - entries
        - isActive

    NewHeatingSchedule:
      type: object
      properties:
        name:
          type: string
          description: Название расписания
        deviceIds:
          type: array
          items:
            type: string
          description: Список ID устройств для привязки к расписанию
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleEntry'
          description: Записи расписания
        isActive:
          type: boolean
          description: Активно ли расписание
      required:
        - name
        - entries

    UpdateHeatingSchedule:
      type: object
      properties:
        name:
          type: string
          description: Название расписания
        deviceIds:
          type: array
          items:
            type: string
          description: Список ID устройств для привязки к расписанию
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleEntry'
          description: Записи расписания
        isActive:
          type: boolean
          description: Активно ли расписание

    ScheduleEntry:
      type: object
      properties:
        dayOfWeek:
          type: integer
          minimum: 0
          maximum: 6
          description: День недели (0 - воскресенье, 6 - суббота)
        startTime:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: Время начала в формате HH:MM
        endTime:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: Время окончания в формате HH:MM
        targetTemperature:
          type: number
          format: float
          description: Целевая температура
        action:
          type: string
          enum: [on, off, automatic]
          description: Действие
      required:
        - dayOfWeek
        - startTime
        - endTime
        - action

    Error:
      type: object
      properties:
        code:
          type: string
          description: Код ошибки
        message:
          type: string
          description: Описание ошибки
        details:
          type: object
          description: Дополнительная информация об ошибке
      required:
        - code
        - message 